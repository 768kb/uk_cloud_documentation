{
  "articles/azure/azs-how-ps-update-azure-stack.html": {
    "href": "articles/azure/azs-how-ps-update-azure-stack.html",
    "title": "Azure Stack Update Procedure | UKCloud Ltd | docfx seed website",
    "keywords": "Azure Stack Update Procedure This guide is intended to provide a reference on how can we perform Azure Stack Updates. Loosely based on Azure Stack Apply Updates . Prerequisites Prerequisites from a Windows-based external client. PowerShell 5.1 Azure Stack PowerShell Modules -> Azure Stack Modules Install Guide Important Always consult Microsoft documentation for your specific Update Version Example -> 1802 Update Caution In the 1802 example you can see that you need to install a Hotfix before you apply the upgrade. That is one of the many reasons why you should always check the official documentation. High Level Overview of the process Important We strongly recommend that you notify users of any maintenance operations, and that you schedule normal maintenance windows during non-business hours as much as possible. Maintenance operations may affect both user workloads and portal operations. Raise a pre-emptive case with Microsoft prior to starting the Update. Download required packages. Full Manual procedure can be found here -> more Download link -> download Upload the packages to Azure Stack. Start Update process. Note Automatic Update Guide to follow Code for Automatic Update can be found here -> more Automated Update Guide (c) UKCloud Ltd, 2018. All Rights Reserved."
  },
  "restapi/petstore.html": {
    "href": "restapi/petstore.html",
    "title": "Pet Store APIs | docfx seed website",
    "keywords": "Swagger Petstore Describe APIs in Pet Store pet Description for pet tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source updatePet Update an existing pet Request PUT /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found 405 Validation exception | Improve this Doc View Source findPetsByStatus Finds Pets by status Multiple status values can be provided with comma separated strings Request GET /pet/findByStatus?status Parameters Name Type Value Notes *status array Status values that need to be considered for filter Responses Status Code Description Samples 200 successful operation 400 Invalid status value | Improve this Doc View Source findPetsByTags Finds Pets by tags Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing. Request GET /pet/findByTags?tags Parameters Name Type Value Notes *tags array Tags to filter by Responses Status Code Description Samples 200 successful operation 400 Invalid tag value | Improve this Doc View Source deletePet Deletes a pet Request DELETE /pet/{petId} Parameters Name Type Value Notes api_key string *petId integer Pet id to delete Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source getPetById Find pet by ID Returns a single pet Request GET /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet to return Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source updatePetWithForm Updates a pet in the store with form data Request POST /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet that needs to be updated name string Updated name of the pet status string Updated status of the pet Responses Status Code Description Samples 405 Invalid input | Improve this Doc View Source uploadFile uploads an image Request POST /pet/{petId}/uploadImage Parameters Name Type Value Notes *petId integer ID of pet to update additionalMetadata string Additional data to pass to server file file file to upload Responses Status Code Description Samples 200 successful operation store Access to Petstore orders Additional description for store tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source getInventory Returns pet inventories by status Returns a map of status codes to quantities Request GET /store/inventory Responses Status Code Description Samples 200 successful operation | Improve this Doc View Source placeOrder Place an order for a pet Request POST /store/order Parameters Name Type Value Notes *body order placed for purchasing the pet Responses Status Code Description Samples 200 successful operation 400 Invalid Order | Improve this Doc View Source deleteOrder Delete purchase order by ID For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors Request DELETE /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of the order that needs to be deleted Responses Status Code Description Samples 400 Invalid ID supplied 404 Order not found | Improve this Doc View Source getOrderById Find purchase order by ID For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions Request GET /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of pet that needs to be fetched Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Order not found user Operations about user | Improve this Doc View Source createUser Create user This can only be done by the logged in user. Request POST /user Parameters Name Type Value Notes *body Created user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source createUsersWithArrayInput Creates list of users with given input array Request POST /user/createWithArray Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source createUsersWithListInput Creates list of users with given input array Request POST /user/createWithList Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source loginUser Logs user into the system Request GET /user/login?username&password Parameters Name Type Value Notes *username string The user name for login *password string The password for login in clear text Responses Status Code Description Samples 200 successful operation 400 Invalid username/password supplied | Improve this Doc View Source logoutUser Logs out current logged in user session Request GET /user/logout Responses Status Code Description Samples default successful operation | Improve this Doc View Source deleteUser Delete user This can only be done by the logged in user. Request DELETE /user/{username} Parameters Name Type Value Notes *username string The name that needs to be deleted Responses Status Code Description Samples 400 Invalid username supplied 404 User not found | Improve this Doc View Source getUserByName Get user by user name Request GET /user/{username} Parameters Name Type Value Notes *username string The name that needs to be fetched. Use user1 for testing. Responses Status Code Description Samples 200 successful operation 400 Invalid username supplied 404 User not found Other APIs | Improve this Doc View Source updateUser Updated user This can only be done by the logged in user. Request PUT /user/{username} Parameters Name Type Value Notes *username string name that need to be updated *body Updated user object Responses Status Code Description Samples 400 Invalid user supplied 404 User not found See Alsos See other REST APIs: Contacts API"
  },
  "restapi/contacts.html": {
    "href": "restapi/contacts.html",
    "title": "Contacts | docfx seed website",
    "keywords": "Contacts | Improve this Doc View Source get contacts You can get a collection of contacts from your tenant. Required scope : Contacts.Read or Contacts.Write Request GET /contacts?api-version Parameters Name Type Value Notes *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The results are returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact\", \"value\": [ { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"35110b16-360c-4c4a-93b2-03f065fabd93\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Yossi Ran\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Yossi\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Yossi@contoso.com\", \"mailNickname\": \"YossiRan\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Yossi@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Ran\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"7163f3b8-70c9-43d2-b9e1-4467ddaf087a\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Jeremy Nelson\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Jeremy\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Jeremy@contoso.com\", \"mailNickname\": \"JeremyNelson\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Jeremy@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Nelson\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"83234b5c-3a10-4108-8f36-39b1addadfdb\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"David Strome\", \"facsimileTelephoneNumber\": null, \"givenName\": \"David\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"David@contoso.com\", \"mailNickname\": \"DavidStrome\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:David@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Strome\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"8c1315ce-bf6f-4e26-b24f-c830606ef41c\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Holly Holt\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Holly\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Holly@contoso.com\", \"mailNickname\": \"HollyHolt\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Holly@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Holt\", \"telephoneNumber\": null } ] } | Improve this Doc View Source get contact by id Get a contact by using the object ID. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The contact is returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/graphdir1.onmicrosoft.com/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact/@Element\", \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null } | Improve this Doc View Source update contact Change a contact's properties. Required scope : Contacts.Write Request PATCH /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. bodyparam this is request body, not real parameter Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact Delete a contact. Required scope : Contacts.Write Request DELETE /contacts/{object_id}[?api-version] Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. | Improve this Doc View Source get contact manager link Get a link to the contact's manager. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. A link to the contact's manager is returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/manager\", \"url\": \"https://graph.windows.net/myorganization/directoryObjects/35110b16-360c-4c4a-93b2-03f065fabd93/Microsoft.WindowsAzure.ActiveDirectory.Contact\" } 404 Not Found. The requested resource was not found. This can occur if the manager property is not currently set for the specified contact. It can also have other causes, for example, a bad domain. A code and associated message is returned with the error. Mime type: application/json { \"odata.error\": { \"code\": \"Request_ResourceNotFound\", \"message\": { \"lang\": \"en\", \"value\": \"Resource not found for the segment 'manager'.\" } } } | Improve this Doc View Source update contact manager Update the contact's manager Required scope : Contacts.Write Request PUT /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. *bodyparam The request body contains a single property that specifies the URL of the user or contact to add as manager. Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact manager by id Delete the contact's manager. Required scope : Contacts.Write Request DELETE /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. N response body is returned. | Improve this Doc View Source get contact direct reports links Get a links to the contact's direct reports. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/directReports?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more direct reports are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/directReports\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/8c1315ce-bf6f-4e26-b24f-c830606ef41c/Microsoft.DirectoryServices.Contact\" } ] } | Improve this Doc View Source get contact memberOf links Get a links to the contact's direct group and directory role memberships. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/memberOf?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more groups and/or directory roles are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/memberOf\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/12345678-b942-47c9-a10e-a4bee353ce60/Microsoft.DirectoryServices.Group\" } ] }"
  },
  "articles/azure/azs-qr-overview.html": {
    "href": "articles/azure/azs-qr-overview.html",
    "title": "Understanding Sovereign Azure BETA | UKCloud Ltd | docfx seed website",
    "keywords": "Understanding Sovereign Azure BETA Introduction UKCloud's Sovereign Azure cloud provides you with new options to harness Microsoft Azure alongside other cloud platforms, including Oracle, VMware and OpenStack. This gives you the flexibility to accommodate diverse workloads within a low latency, accredited platform with native connectivity to non-cloud workloads in Crown Hosting and the networks that are vital to the public sector: from PSN Protected to N3/HSCN and RLI. This article provides an introduction to the Sovereign Azure cloud and helps you get up and running with the demonstrator units that we're providing as a BETA environment. About Sovereign Azure At UKCloud, we understand that there is no \"one cloud fits all\" solution. There are usually many factors to consider when looking to move your applications to the cloud, including existing technology investment and skills. Additionally, while some applications can easily move to the public cloud, there are others that for various reasons (latency, connectivity, security, regulation) must run on-premises. Microsoft Azure Stack is an extension of Azure that provides on-premises Infrastructure-as-a-Service (IaaS) and Platform-as-a-Service (PaaS) that enables you to leverage the benefits of cloud in an on-premises environment. The Sovereign Azure cloud brings the advantages of the Microsoft Cloud platform to our assured UK-sovereign platform, helping you realise the benefits that a true hybrid cloud environment has to offer, while balancing the right amount of flexibility and control. With Sovereign Azure, you can: Leverage existing Azure investment, knowledge and skills Use Azure Stack alongside other technologies, for example, VMware, OpenStack and Oracle Connect to government community networks, including PSN, N3/HSCN, Janet and RLI Meet specific compliance directives, such as data sovereignty or security The two main delivery models provided by our Sovereign Azure cloud are: A multi-tenant IaaS and PaaS platform available in both UKCloud security domains (Assured OFFICIAL and Elevated OFFICIAL), connected to government community networks with UKCloud's award-winning support Private cloud deployment of Sovereign Azure dedicated to a single customer Supported features Our Sovereign Azure cloud is currently offered as a BETA opportunity for our customers to familiarise themselves with our Azure service. This is intended as a first look—with the service evolving throughout the BETA to represent the live production service. Subsequently, some features may be added, altered or withdrawn throughout the BETA as our understanding evolves. At initial launch, Sovereign Azure BETA supports the following Azure Stack IaaS features: Compute Virtual machines (VMs) provide the basic compute building blocks in Azure Stack. The table below lists the VM sizes available. Size vCPU Memory (GiB) Temp storage (GiB) Standard_D1_v2 1 3.5 50 Standard_D2_v2 2 7 100 Standard_D3_v2 4 14 200 Standard_D4_v2 8 28 400 Standard_A0 1 0.768 20 Standard_A1 1 1.75 70 Standard_A2 2 3.5 135 Standard_A3 4 7 285 Standard_A4 8 14 605 Standard_A5 2 14 135 Standard_A6 4 28 285 A0\\Basic_A0 1 768 MB 20 GB A1\\Basic_A1 1 1.74 GB 40 GB A2\\Basic_A2 2 3.5 GB 60 GB A3\\Basic_A3 4 7 GB 120 GB A4\\Basic_A4 8 14 GB 240 GB Standard_DS11_v2 2 14 28 Standard_DS12_v2 4 28 56 need to confirm list above is correct and up to date You can deploy VMs using the Azure Stack portal and other tooling. VMs have the following support: API Azure Stack Marketplace—provides access to pre-created images which help speed up application delivery Azure Resource Manager—enables you to write templates to deploy, update and delete Azure Stack resources in a single coordinated operation https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-vm-considerations Network Virtual networks—Configure virtual private clouds, create and manage your private address space within Azure; you can configure this via the UI, API and other tooling Load balancers (IPv4 only)—Deploy basic load balancers VPN gateway—Create site-to-site VPNs to remote infrastructure with the Azure Stack VPN gateway Routing—Configure basic custom-defined routing on virtual networks; Vnet to Vnet peering is not yet supported https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-network-differences Storage Type of storage Description Notes vs Azure Azure Blob Storage (block) Object storage; good for storing documents, videos, images and so on Size of disk storage differs significantly, as well as naming standards like name length Azure Blob Storage (page) Used to support VM disks; good for randomly accessed large files Azure Blob Storage (append) Used for log files Azure Queue Storage Message queue as a service to provide asynchronous scale out micro-services, among other things Azure Table Storage NoSQL database service; good for highly scalable, eventually consistent database support Max sizes differ Advanced features Key Vault—Azure Stack provides crytographic secret storage for applications and services. These services can be consumed by both the portal and API. https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-kv-intro Design considerations When designing your Sovereign Azure applications using our BETA service, you should consider the following: Compute Resource restrictions—UKCloud will provide BETA customers with an amount of useable compute resource (which will be advised upon onboarding). Customers will be able to use this resource as they wish—but will not be able to exceed this resource. Consider the VM sizes required to prove the functionality required. Azure Stack supports a subset of Azure VM extensions; Sovereign Azure currently supports the following: BGInfo v2.1 CustomScriptExtension v1.8 JsonADDomainExtension v1.3 VMAccessAgent v2 CustomScriptForLinux v1.5.2.0 OSPatchingForLinux v2.3.0.1 VMAccessForLinux v1.4.0.0 DockerExtension v1.1.1606092330 DSC v2.19.0.0 IaaSAntimalware v1.4.0.0 IaaSDiagnostics v1.10.1.1 MicrosoftMonitoringAgent v1.0.10900.0 Note For an up-to-date list of the supported extensions, perform the following steps: First, ensure that you've installed the relevant Azure PowerShell tools from the following links: https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-powershell-install https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-powershell-download Then run the following commands: Add-AzureRMEnvironment -Name \"AzureStackAdmin\" -ArmEndpoint \"https://management.frn00006.azure.ukcloud.com\" Login-AzureRmAccount -EnvironmentName \"AzureStackAdmin\" Get-AzureRmVmImagePublisher -Location frn00006 | ` Get-AzureRmVMExtensionImageType | ` Get-AzureRmVMExtensionImage | ` Select Type, Version | ` Format-Table -Property * -AutoSize Use load balancers to make the best use of IP address quota. Azure Stack API may be a couple of releases behind Azure. Single region and single state set (affects availability). VM sets don't support auto-scale, so consider how to handle load. Check Azure Resource Manager (ARM) templates to see if they're compatible with Azure Stack. Storage Azure Stack storage is all served from the same pool of disks and doesn't provide \"limitless\" storage, so you should consider the following: Use blob storage (object storage) to support the application; not for multiple petabytes of data storage Put large volume data on UKCloud's Cloud Storage Clean up backups to conserve storage Consider use of temporary storage There is a difference in maximum blob storage between Azure and Azure Stack No guarantees around IOPs Use blob storage for queues to help deliver scalable micro-services Accessing Sovereign Azure demonstrator units You can access Sovereign Azure from the following location: https://portal.frn00006.azure.ukcloud.com/ Further information For more information about Azure Stack, see the following Microsoft resources: Get Started with Azure Azure Stack Operator Documentation For more information about our Sovereign Azure service, see: Sovereign Azure BETA FAQs Feedback If you have any comments on this article, or any other aspect of your UKCloud experience, send them to feedback@ukcloud.com. (c) UKCloud Ltd, 2018. All Rights Reserved."
  },
  "articles/azure/azs-how-ps-configure.html": {
    "href": "articles/azure/azs-how-ps-configure.html",
    "title": "Configure the Azure Stack user's PowerShell environment for UKCloud | based on Microsoft Docs | docfx seed website",
    "keywords": "Configure the Azure Stack user's PowerShell environment As an Azure Stack user, you can use PowerShell to manage Azure Stack resources such as create virtual machines, deploy Azure Resource Manager templates, etc. This topic is scoped to use with the user environments only. In order to interact with Azure Stack PowerShell you will need to set up your enviroment. To do so follow the below guide: Prerequisites Run the following prerequisites from a Windows-based external client. Install Azure Stack PowerShell Note The following steps require PowerShell 5.0. To check your version, run $PSVersionTable.PSVersion and compare the \"Major\" version. For \"legacy\" Operating Systems like Windows Server 2008 R2 and Windows 7, or Windows Server 2012 R2, Windows Server 2012, and Windows 8.1 Download the Windows Management Framework 5.1 # Set Execution Policy Set-ExecutionPolicy RemoteSigned # PowerShell commands for Azure Stack are installed through the PowerShell gallery. To register the PSGallery repository, open an elevated PowerShell session from the development kit # or from a Windows-based external client if you are connected through VPN and run the following command: Set-PSRepository -Name \"PSGallery\" -InstallationPolicy Trusted # Uninstall existing versions of PowerShell Get-Module -ListAvailable | where-Object {$_.Name -like “Azure*”} | Uninstall-Module # Install the AzureRM.Bootstrapper module. Select Yes when prompted to install NuGet Install-Module -Name AzureRm.BootStrapper # Install and import the API Version Profile required by Azure Stack into the current PowerShell session. Use-AzureRmProfile -Profile 2017-03-09-profile -Force Install-Module -Name AzureStack -RequiredVersion 1.2.11 Configure the user environment and sign in to Azure Stack UKCloud FRN00006 Region is based on the Azure AD deployment type, run the following scripts to configure PowerShell for Azure Stack (Make sure to replace the AADTenantName, GraphAudience endpoint, and ArmEndpoint values as per your environment configuration): Azure Active Directory (AAD) based deployments # Set Execution Policy Set-ExecutionPolicy RemoteSigned # Register an AzureRM environment that targets your Azure Stack instance Add-AzureRMEnvironment -Name \"AzureStackUser\" -ArmEndpoint \"https://management.frn00006.azure.ukcloud.com\" # Sign in to your environment Login-AzureRmAccount -EnvironmentName \"AzureStackUser\" Azure Active Directory (AAD) based deployments - Embedded Credentials # Set Execution Policy Set-ExecutionPolicy RemoteSigned # Register an AzureRM environment that targets your Azure Stack instance Add-AzureRMEnvironment -Name \"AzureStackUser\" -ArmEndpoint \"https://management.frn00006.azure.ukcloud.com\" # Create your Credentials $AZSusername = \"<username>@<myDirectoryTenantName>.onmicrosoft.com\" $AZSpassword = '<your password>' $AZSuserPassword = ConvertTo-SecureString \"$AZSpassword\" -AsPlainText -Force $AZScred = new-object -typename System.Management.Automation.PSCredential -argumentlist $AZSusername,$AZSuserPassword # Sign in to your environment Login-AzureRmAccount -Credential $AZScred -EnvironmentName \"AzureStackUser\" Test the connectivity Now that we've got everything set-up, let's use PowerShell to create resources within Azure Stack. For example, you can create a resource group for an application and add a virtual machine. Use the following command to create a resource group named \"MyResourceGroup\": New-AzureRmResourceGroup -Name \"MyResourceGroup\" -Location \"frn00006\" Next steps Develop templates for Azure Stack Deploy templates with PowerShell"
  },
  "articles/azure/azs-gs.html": {
    "href": "articles/azure/azs-gs.html",
    "title": "Azure Stack Update Procedure | UKCloud Ltd | docfx seed website",
    "keywords": "Getting started guide for Sovereign Azure BETA Introduction UKCloud's Sovereign Azure service provides you with new options to harness Microsoft Azure alongside other cloud platform, including Oracle, VMware and OpenStack. This gives you the flexibility to accommodate diverse workloads within a low-latency, accredited platform with native connectivity to non-cloud workloads in Crown Hosting and the networks that are vital to the Public Sector: from PSN Protected to HSCN and RLI. This getting started guide provides you with the information you need to get up and running with your Sovereign Azure service. Intended audience To complete the steps in this guide, you must have access to UKCloud's Azure Stack portal. Sovereign Azure overview At UKCloud, we understand that there is no \"one size fits all\" solution. There are usually many factors to consider when looking to move your applications to the cloud, including existing technology investment and skills. Additionally, while some applications can easily move to the public cloud, there are others that for various reasons (latency, connectivity, security, regulation) must run on-premises. Microsoft Azure Stack is an extension of Azure that provides on-premises Infrastructure-as-a-Service (IaaS) and Platform-as-a-Service (PaaS), enabling you to leverage the benefits of cloud in an on-premises environment. The Sovereign Azure service brings the advantages of the Microsoft Cloud platform to our assured UK-sovereign platform, helping you realise the benefits that a true hybrid cloud environment has to offer, while balancing the right amount of flexibility and control. With Sovereign Azure, you can: Leverage existing Azure investment, knowledge and skills Use Azure Stack alongside other technologies, for example, VMware, OpenStack or Oracle Connect to government community networks, including PSN, HSCN, Janet and RLI Meet specific compliance directives, such as data sovereignty or security The two main delivery models provided by our Sovereign Azure service are: A multi-tenant IaaS and PaaS platform available in both UKCloud security domains (Assured OFFICIAL and Elevated OFFICIAL), connected to government community networks with UKCloud's award-winning support Private cloud deployment of Sovereign Azure dedicated to a single customer Before you begin You should have received your Sovereign Azure login credentials from your Sovereign Azure administrator. If you're the administrator, your Customer Success Manager (CSM) will have provided you with your credentials. Logging in to the Microsoft Azure Stack portal To manage your Sovereign Azure service, you need to log in to UKCloud's Azure Stack portal. The portal provides access to all your Sovereign Azure resources. To log in to the Azure Stack portal: In your browser, go to the following URL: http://portal.frn00006.azure.ukcloud.com/ In the login dialog box, enter the email address for your Sovereign Azure account and click Next , or pick your account. Enter your password and click Sign in . After you log in, you'll see the main Azure Stack portal home page. On this page you'll see: A — Favourites panel Quickly access your most used resources (see link) B — Dashboard Access information about your Sovereign Azure resources (see link) C — Settings Change your portal settings, such as theme and language D — Notifications View useful alerts about your Sovereign Azure environment E — New Create new resources Understanding subscriptions, offers and plans Your Sovereign Azure environment is provisioned with a subscription that determines the services you have access to, and your quotas for those services. A subscription is a mechanism for signing up to an offer An offer is a collection of one or more plans A plan is a collection of one or more services , with associated quotas Customising your favourites In the Azure Stack portal, down the left-hand side, you can see a list of your favourite resources. You can customise this list to include the resources that you access most frequently. In the favourites panel of the Azure Stack portal, click the More services link. In the list of resources available to your subscription, resources that are included in your favourites panel are indicated by a yellow star icon. Tip! You can use the Filter field to filter the list of resources. You can order the list By category or By name . Click the grey star icon next to the resource that you want to add to your list of favourites. Tip! To remove a resource from the favourites panel, click the yellow star next to the service. When you're done, close the list of resources. You can now see the newly added resource in your favourites panel. You can reorder the resources in your favourites panel by dragging and dropping them. Customising and adding dashboards An Azure Stack dashboard consists of tiles that provide access to the resources available to your subscription. You can create multiple dashboards to provide different views of your resources. To customise a dashboard: In the Azure Stack portal, select the dashboard that you want to customise. Click the Edit dashboard option. Drag the tiles you want to add to the dashboard from the Tile Gallery onto the dashboard. To change the layout of a tile on the dashboard, hover your mouse over the tile, click the Context menu icon and select the new layout. Drag tiles to rearrange them on the dashboard. To delete a tile from the dashboard, hover your mouse over the tile and click the Unpin icon. When you're done, click Done customizing . To create a new dashboard, click the New dashboard option. Enter a name for the dashboard. Add and arrange tiles as described above and, when you're done, click Done customizing . Configuring the Azure CLI Azure provides a command line interface (CLI) that you can use to manage your Sovereign Azure resources. For example, you can use the Azure CLI to create virtual machines and deploy Azure Resource Manager templates. For more information, including steps for setting up the Azure CLI with Sovereign Azure and a list of known issues, see: https://github.com/UKCloud/AzureStack/tree/master/AzureCLI/Tenants Configuring the Azure Stack PowerShell client You can use PowerShell to manage your Sovereign Azure resources. For example, you can create virtual machines and deploy Azure Resource Manager templates. For more information, including steps and scripts for setting up Azure PowerShell with Sovereign Azure and a list of known issues, see: https://github.com/UKCloud/AzureStack/tree/master/PowerShell/Tenants Next steps Congratulations! In this getting started guide, you've learned the basics about Sovereign Azure and the Azure Stack portal. For more information about Sovereign Azure, see the following articles in the UKCloud Knowledge Centre: Sovereign Azure BETA Sovereign Azure BETA FAQs How to grant users access to Sovereign Azure How to use the Azure Stack API Glossary This section provides a glossary of terms specific to Sovereign Azure. Azure Active Directory The service that provides identity management within Sovereign Azure. cloud operator An entity that provides services, via subscriptions, on Azure Stack. UKCloud is a cloud operator. Microsoft Azure Microsoft's public cloud service. Microsoft Azure Stack An extension of Azure that provides cloud computing to an on-premises environment. resource An object within Azure Stack, such as a virtual machine, network or storage. resource group A collection of resources, services and applications. subscription A mechanism for organising resources and services for tenants to consume. Sovereign Azure A UKCloud IaaS and PaaS service that works as an extension of Microsoft's own Azure Public Cloud, delivered from our assured sovereign data centres. tenant An entity that consumes services from cloud operators in Sovereign Azure. Feedback If you have any comments on this document, or any other aspect of your UKCloud experience, send them to feedback@ukcloud.com. (c) UKCloud Ltd, 2018. All Rights Reserved."
  },
  "articles/engineering_guidelines.html": {
    "href": "articles/engineering_guidelines.html",
    "title": "Engineering Guidelines | docfx seed website",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (i.e. NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies require additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important. The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the Owner of that code. To commit the PR to the repo do not use the Big Green Button . Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . hotfix has the code for fixing master bug after it is released. hotfix changes will be merged back to master and dev once it is verified. Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. Solution need to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "articles/docfx_getting_started.html": {
    "href": "articles/docfx_getting_started.html",
    "title": "Getting Started with docfx | docfx seed website",
    "keywords": "Getting Started with docfx Getting Started This is a seed. docfx is an API documentation generator for .NET, currently support C# and VB. It has the ability to extract triple slash comments out from your source code. What's more, it has syntax to link additional files to API to add additional remarks. docfx will scan your source code and your additional conceptual files and generate a complete HTML documentation website for you. docfx provides the flexibility for you to customize the website through templates. We currently have several embedded templates, including websites containing pure static html pages and also website managed by AngularJS. Click \"View Source\" for an API to route to the source code in GitHub (your API must be pushed to GitHub) docfx provide DNX version for cross platform use. docfx can be used within Visual Studio seamlessly. NOTE offical docfx.msbuild nuget package is now in pre-release version. You can also build your own with source code and use it locally. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion , cross reference , and yaml header ."
  },
  "index.html": {
    "href": "index.html",
    "title": "UKCloud Knowledge Centre Articles | docfx seed website",
    "keywords": "UKCloud Knowledge Centre Articles Welcome to UKCloud"
  },
  "articles/csharp_coding_standards.html": {
    "href": "articles/csharp_coding_standards.html",
    "title": "C# Coding Standards | docfx seed website",
    "keywords": "C# Coding Standards Introduction The coding standard will be used in conjunction with customized version of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that the standard is followed by all developers on the team in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose The aim of this section is to define a set of C# coding standards to be used by CAPS build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections, will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards which can be applied to any type of application developed in C#, based on Framework Design Guidelines . It does not pretend to be a tutorial on C#. It only includes a set of limitations and recommendations focused on clarifying the development. Tools Resharper is a great 3rd party code cleanup and style tool. StyleCop analyzes C# srouce code to enforce a set of style and consistency rules and has been integrated into many 3rd party development tools such as Resharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. C# Stylizer does many of the style rules automatically Highlights of Coding Standards This section is not intended to give a summary of all the coding standards that enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some recommended however not mandatory(which means not enabled in StyleCop) coding standards. File Layout (Recommended) Only one public class is allowed per file. The file name is derived from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Nested types, e.g. classes, enum, struct, etc. Field members, e.g. member variables, const, etc. Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables, Static) Private nested types Naming (Mandatory) DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream NOTE : A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields private readonly Guid _userId = Guid.NewGuid(); DO start static readonly fields, constants with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO have \"Async\" explicitly in the Async method name to notice people how to use it properly Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > TOOLS > Options > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Cross-platform coding Our code should supports multiple operating systems. Don't assume we only run (and develop) on Windows. Code should be sensitvie to the differences between OS's. Here are some specifics to consider. DO use Enviroment.NewLine instead of hard-coding the line break instead of \\r\\n , as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that thes line-endings may cause problems in code when using @\"\" text blocks with line breaks. DO Use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assmebly live in the Microsoft.Foo.FunctionalTests assmebly. In general there should be exactly one unit test assebmly for each product runtime assembly. In general there should be one functional test assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.Boo class in the test assembly. Unit test method naming Unit test method names must be descriptive about what is being tested, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages, optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement is nothing more than a call to the one method that you are trying to test. keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recomended because way too many things can go wrong in this one statement. All the GetComplexParamN() calls can throw for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occured. The ideal pattern is to move the complex parameter building into the `Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself blew up. Testing exception messages In general testing the specific exception message in a unit test is important. This ensures that the exact desired exception is what is being tested rather than a different exception of the same type. In order to verify the exact exception it is important to verify the message. var ex = Assert.Throws<InvalidOperationException>( () => fruitBasket.GetBananaById(1234)); Assert.Equal( \"1234\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This will make the tests a lot more readable and also allow the test runner report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If the tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel tests! For functional tests it is reasonable to disable parallel tests."
  },
  "README.html": {
    "href": "README.html",
    "title": "docfx-seed | docfx seed website",
    "keywords": "docfx-seed Description This is a sample docfx documentation project. It contains .NET source code and markdown files. docfx.json is the configuration file for running docfx . docfx will generate a static website as similar to http://docascode.github.io/docfx-seed/index.html How to run Under Windows Install from Nuget Install Nuget.exe Create a folder, e.g. C:\\Tools\\docfx , under the folder, nuget install docfx.console Open command line: set PATH=%PATH%;C:\\Tools\\docfx\\docfx.console\\tools docfx docfx-seed\\docfx.json --serve Install from choco Install chocolatey Open command line: choco install docfx docfx docfx-seed\\docfx.json --serve Cross platform Install Mono Install Nuget.exe > mono nuget.exe install docfx.console > mono docfx.console/tools/docfx.exe docfx-seed/docfx.json Further information about docfx docfx is a tool to generate documentation towards .NET source code and markdown files. Please refer to docfx to get start. The docfx website itself is generated by docfx !"
  },
  "articles/vmware/vmw-how-ps-configure.html": {
    "href": "articles/vmware/vmw-how-ps-configure.html",
    "title": "Configure the Azure Stack user's PowerShell environment for UKCloud | based on Microsoft Docs | docfx seed website",
    "keywords": "Configure the VMware user's PowerShell environment Testing Page for VMware Documentation"
  }
}